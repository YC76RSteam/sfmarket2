<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yc.market.dao.SfProductCategoryMapper">
  <resultMap id="BaseResultMap" type="com.yc.market.bean.SfProductCategory">
    <id column="pcid" jdbcType="INTEGER" property="pcid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parentid" jdbcType="INTEGER" property="parentid" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="iconClass" jdbcType="VARCHAR" property="iconclass" />
   <!-- 一对多关联 -->
    <collection property="children" column="pcid" select="selectChild" ></collection>
  </resultMap>
   
  <select id="selectChild" resultMap="BaseResultMap">
  		select * from sf_product_category where parentid = #{pcid}
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pcid, name, parentid, type, iconClass
  </sql>
  <select id="selectByExample" parameterType="com.yc.market.bean.SfProductCategoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sf_product_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sf_product_category
    where pcid = #{pcid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sf_product_category
    where pcid = #{pcid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yc.market.bean.SfProductCategoryExample">
    delete from sf_product_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yc.market.bean.SfProductCategory">
    insert into sf_product_category (pcid, name, parentid, 
      type, iconClass)
    values (#{pcid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{parentid,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{iconclass,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yc.market.bean.SfProductCategory">
    insert into sf_product_category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pcid != null">
        pcid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parentid != null">
        parentid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="iconclass != null">
        iconClass,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pcid != null">
        #{pcid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="iconclass != null">
        #{iconclass,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yc.market.bean.SfProductCategoryExample" resultType="java.lang.Long">
    select count(*) from sf_product_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sf_product_category
    <set>
      <if test="record.pcid != null">
        pcid = #{record.pcid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null">
        parentid = #{record.parentid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.iconclass != null">
        iconClass = #{record.iconclass,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sf_product_category
    set pcid = #{record.pcid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      parentid = #{record.parentid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      iconClass = #{record.iconclass,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yc.market.bean.SfProductCategory">
    update sf_product_category
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        parentid = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="iconclass != null">
        iconClass = #{iconclass,jdbcType=VARCHAR},
      </if>
    </set>
    where pcid = #{pcid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yc.market.bean.SfProductCategory">
    update sf_product_category
    set name = #{name,jdbcType=VARCHAR},
      parentid = #{parentid,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      iconClass = #{iconclass,jdbcType=VARCHAR}
    where pcid = #{pcid,jdbcType=INTEGER}
  </update>
</mapper>